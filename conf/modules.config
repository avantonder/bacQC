/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// General configuration options
//

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    if (!params.skip_fastqc) {
            withName: '.*FASTQC_RAW' {
                ext.args = '--quiet'
                ext.prefix = { "${meta.id}_raw" }
                publishDir = [
                    path: { "${params.outdir}/fastqc/raw" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }

            withName: '.*FASTQC_TRIM' {
                    ext.args = '--quiet'
                    ext.prefix = { "${meta.id}_trim" }
                    publishDir = [
                        path: { "${params.outdir}/fastqc/trim" },
                        mode: params.publish_dir_mode,
                        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                    ]
                }

            withName: 'FASTQC_FINAL' {
                ext.args = '--quiet'
                ext.prefix = { "${meta.id}_final" }
                publishDir = [
                    path: { "${params.outdir}/fastqc/final" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }

    withName: FASTP {
        ext.args = {[
            params.extra_fastp_args ? params.extra_fastp_args.split("\\s(?=--)") : ''
        ].flatten().unique(false).join(' ').trim() }
    }
}
//
// Pipeline options
//

process {

    withName: 'FASTQSCAN_RAW' {
        ext.prefix = { "${meta.id}.raw" }
        publishDir = [
            path: { "${params.outdir}/fastqscan/raw" },
            mode: params.publish_dir_mode,
            pattern: '*.json'
        ]
    }

    withName: 'FASTQSCANPARSE_RAW' {
        ext.prefix = { "raw" }
        publishDir = [
            path: { "${params.outdir}/metadata" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }
}

process {
    withName: 'FASTQSCAN_TRIM' {
        ext.prefix = { "${meta.id}.trim" }
        publishDir = [
            path: { "${params.outdir}/fastqscan/trimmed" },
            mode: params.publish_dir_mode,
            pattern: '*.json'
        ]
    }

    withName: 'FASTQSCANPARSE_TRIM' {
        ext.prefix = { "trim" }
        publishDir = [
            path: { "${params.outdir}/metadata" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }
    
    withName: 'READ_STATS' {
        publishDir = [
            path: { "${params.outdir}/read_stats" },
            mode: params.publish_dir_mode,
            pattern: '*.csv'
        ]
    }

    withName: 'READSTATS_PARSE' {
        publishDir = [
            path: { "${params.outdir}/metadata" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }
    
    withName: 'KRAKEN2_KRAKEN2' {
        ext.args = '--report-zero-counts'
        publishDir = [
            path: { "${params.outdir}/kraken2" },
            mode: params.publish_dir_mode,
            pattern: '*.txt'
        ]
    }

    withName: 'KRONA_KTIMPORTTAXONOMY' {
        ext.args = '-t 2 -m 6'
        publishDir = [
            path: { "${params.outdir}/krona" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
        ]
    }

    withName: 'KRAKENTOOLS_EXTRACT' {
        ext.args = '--include-children --fastq-output'
        publishDir = [
            path: { "${params.outdir}/extracted_reads" },
            mode: params.publish_dir_mode,
            pattern: '*.extracted.fastq.gz'
        ]
    }

    withName: 'BRACKEN_BRACKEN' {
        ext.args = '-l S -t 10 -r 150'
        publishDir = [
            path: { "${params.outdir}/bracken" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }

    withName: 'KRAKENPARSE' {
        publishDir = [
            path: { "${params.outdir}/metadata" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}